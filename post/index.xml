<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Miao&amp;Blog</title>
    <link>https://charliemini.github.io/post/</link>
    <description>Recent content in Posts on Miao&amp;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>charlie_cc@foxmail.com (Miao)</managingEditor>
    <webMaster>charlie_cc@foxmail.com (Miao)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Wed, 26 Jun 2019 14:35:31 +0800</lastBuildDate>
    
	<atom:link href="https://charliemini.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>猫</title>
      <link>https://charliemini.github.io/post/%E7%8C%AB/</link>
      <pubDate>Wed, 26 Jun 2019 14:35:31 +0800</pubDate>
      <author>charlie_cc@foxmail.com (Miao)</author>
      <guid>https://charliemini.github.io/post/%E7%8C%AB/</guid>
      <description>汤姆</description>
    </item>
    
    <item>
      <title>GO学习笔记</title>
      <link>https://charliemini.github.io/post/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 25 Jun 2019 18:53:09 +0800</pubDate>
      <author>charlie_cc@foxmail.com (Miao)</author>
      <guid>https://charliemini.github.io/post/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>GO学习笔记 结构化程序 每个程序都由pkg的概念组成，必须在源代码里非注释的第一行致指明这个文件属于哪一个包,注意包的名字都要用小写字母。
package main
标准库 重定义包名
import fm &amp;quot;fmt&amp;quot;
如果导入了一个没有使用的包会报错
类型 结构化的类型以nil作为默认值
常量 用const定义，用于存储不会改变的数据线，只能是布尔型、数字和字符串。
支持显、隐式类型定义
变量 用var关键字声明变量 var identifier type OR var identifier type = value
当变量被声明后，系统自动赋予它该类型的零型，所有的内存在go中都是经过初始化的。变量命名规则遵循驼峰法。
如果希望全局变量被外部包使用，则需要将首个单词字母大写*。
在函数体内部初始化声明变量时可以使用简短的语法：a := 1
声明局部变量而不去使用它同样会出现编译错误
使用等于号进行变量间的相互赋值时，只是引用了同一个地址指针。
如果想要交换两个文明变量的值，可以使用a,b = b,a
_ 被当作一个只写变量
全局变量除了可以在全局声明中初始化，也可以在init函数中初始化,也就是在声明的全局变量，可以经由init 函数更改赋值并作用于整个程序作用域。
基本类型与运算符 GO是强类型语言，只支持显示转换，所以只有类型严格相同时才可以做运算操作。
不允许不同类型之间的混合使用，但允许和常量之间的混合使用。
func main(){ var a int var b int 16 a = 1 b = a + a // 错误 b = b + 5 }  格式化字符串：%d用于格式化字符串</description>
    </item>
    
  </channel>
</rss>